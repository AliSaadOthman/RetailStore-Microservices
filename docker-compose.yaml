version: '3.4'

services:
  productservice:
    image: productservice
    build:
      context: src
      dockerfile: ProductService/Dockerfile
    ports:
      - "8080:8080"
      - "8081:8081"
    networks:
      - kafka-network

  orderservice:
    image: orderservice
    build:
      context: src
      dockerfile: OrderService/Dockerfile
    ports:
      - "8082:8080"
      - "8083:8081"
    networks:
      - kafka-network
 
  customerservice:
    image: customerservice
    build:
      context: src
      dockerfile: CustomerService/Dockerfile
    ports:
      - "8084:8080"
      - "8085:8081"
    networks:
      - kafka-network

  inventoryservice:
    image: inventoryservice
    build:
      context: src
      dockerfile: InventoryService/Dockerfile
    ports:
      - "8086:8080"
      - "8087:8081"
    networks:
      - kafka-network

  paymentservice:
    image: paymentservice
    build:
      context: src
      dockerfile: PaymentService/Dockerfile
    ports:
      - "8088:8080"
      - "8089:8081"
    networks:
      - kafka-network

  apigateway:
    image: apigateway
    build:
      context: src
      dockerfile: APIGateway/Dockerfile
    ports:
      - "8090:8080"
      - "8091:8081"
    networks:
      - kafka-network

  identityserver:
    image: identityserver
    build:
      context: src
      dockerfile: IdentityServer/Dockerfile
    ports:
      - "8092:8080"
      - "8093:8081"
    networks:
      - kafka-network

  zookeeper:
    image: zookeeper:3.8.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - kafka-network

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    ports:
        - "9092:9092"
    environment:
        KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
        KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
        KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
        - kafka-network

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:9093
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge